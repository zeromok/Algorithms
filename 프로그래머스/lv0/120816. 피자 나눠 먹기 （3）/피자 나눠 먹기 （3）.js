function solution(slice, n) {
<<<<<<< HEAD
   return Math.ceil(n/slice);
}
=======
   return ( n % slice == 0 ? parseInt( n / slice ) : parseInt( n / slice ) + 1 )
}
/*
   ===========
   통과한 풀이
   ===========
   삼힝연산자, % (모듈러), parseInt() 사용
   (n / slice) 의 값이 '0' 즉, 딱 떨어지면 그대로 반환
   '0' 이 아니면 parseInt() 를 사용해 소수점 버리고 + 1 해서 반환

   =========
   다른 풀이
   =========
   slice : 피자조각 수 (2 <= slice <= 10 )
   n     : 피자를 먹는 사람의 수 ( 1 <= n <= 100 )

   1. 사람들이 최소한 한 조각 이상 피자를 먹으려면?
      ( 사람수 / 피자조각수 )

   2. 딱 맞아 떨어지면 좋지만, 딱 떨어지지 않을때에는?
      ex) 10(사람) / 7(조각) = 1.4....
      결과는 2 가 나와야 한다. -> 소수점과 관련된 함수사용

   3. Math.ceil(n/slice);
      () 안 들어온 값을 무조건 소수점 자리를 올려 반환
*/
>>>>>>> 2d10c0f (120816. Update)
